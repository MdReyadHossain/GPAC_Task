// <auto-generated />
using System;
using GPAC_Task.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GPAC_Task.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GPAC_Task.Models.Entities.CorporateCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CorporateCustomers");
                });

            modelBuilder.Entity("GPAC_Task.Models.Entities.IndividualCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IndividualCustomers");
                });

            modelBuilder.Entity("GPAC_Task.Models.Entities.MeetingMinutesDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MeetingMinutesMasterId")
                        .HasColumnType("int");

                    b.Property<int>("ProductServiceId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MeetingMinutesMasterId");

                    b.HasIndex("ProductServiceId");

                    b.ToTable("MeetingMinutesDetails");
                });

            modelBuilder.Entity("GPAC_Task.Models.Entities.MeetingMinutesMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Agenda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CorporateCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Decision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discussion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostSide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndividualCustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CorporateCustomerId");

                    b.HasIndex("IndividualCustomerId");

                    b.ToTable("MeetingMinutesMasters");
                });

            modelBuilder.Entity("GPAC_Task.Models.Entities.ProductService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductServices");
                });

            modelBuilder.Entity("GPAC_Task.Models.Entities.MeetingMinutesDetail", b =>
                {
                    b.HasOne("GPAC_Task.Models.Entities.MeetingMinutesMaster", "MeetingMinutesMaster")
                        .WithMany()
                        .HasForeignKey("MeetingMinutesMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GPAC_Task.Models.Entities.ProductService", "ProductService")
                        .WithMany()
                        .HasForeignKey("ProductServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeetingMinutesMaster");

                    b.Navigation("ProductService");
                });

            modelBuilder.Entity("GPAC_Task.Models.Entities.MeetingMinutesMaster", b =>
                {
                    b.HasOne("GPAC_Task.Models.Entities.CorporateCustomer", "CorporateCustomer")
                        .WithMany("MeetingMinutesMasters")
                        .HasForeignKey("CorporateCustomerId");

                    b.HasOne("GPAC_Task.Models.Entities.IndividualCustomer", "IndividualCustomer")
                        .WithMany("MeetingMinutesMasters")
                        .HasForeignKey("IndividualCustomerId");

                    b.Navigation("CorporateCustomer");

                    b.Navigation("IndividualCustomer");
                });

            modelBuilder.Entity("GPAC_Task.Models.Entities.CorporateCustomer", b =>
                {
                    b.Navigation("MeetingMinutesMasters");
                });

            modelBuilder.Entity("GPAC_Task.Models.Entities.IndividualCustomer", b =>
                {
                    b.Navigation("MeetingMinutesMasters");
                });
#pragma warning restore 612, 618
        }
    }
}
